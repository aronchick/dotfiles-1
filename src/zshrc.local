#-----------VARS----------------------

export EDITOR='vim'
export VISUAL='vim'
export CDPATH='.:~'
export GOPATH=$HOME
export JAVA_HOME='/usr/java/latest'
export WORKON_HOME=$HOME/.virtualenvs
export PIP_VIRTUALENV_BASE=$WORKON_HOME

#------------OPTIONS------------------

setopt DVORAK # use dvorak keyboard layout for misspelled suggestions

#------------ALIASES------------------

# Directory listing

alias ll='ls -AlFh'
alias la='ls -A'
alias l='ls -CF'
alias latr='ls -lAtr'
alias lla='ll -A'       
alias l1='ls -1A'       # All files in 1 column
alias llg'll | grep'

# Easier navigation: .., ..., -
alias ..='cd ..'
alias ....='cd ../..'
alias xxx='exit'
alias :q='exit'

# File size
alias fs="stat -f '%z bytes'"
alias df="df -h"
alias du='du -ch'
alias rpg="rpm -qa | grep"

if (( $+commands[subscription-manager] )) ; then
    alias sm="sudo subscription-manager"
fi

# MISC commands
alias gtfo="/dev/null"
alias stfu="/dev/null"
alias wtf="/dev/urandom"
alias mount='mount | column -t'
alias h='history'
alias psg="ps aux | grep -v grep | grep -i -e VSZ -e"
alias lsg="sudo lsof | grep"
alias lvim='vim -c "normal '\''0"'
alias mux='tmuxinator'
alias ss='sudo '
alias v='vim'
alias lmsg='sudo less +F /var/log/messages'
alias dmsg='less +F /var/log/dmesg'
alias -g H='| head'
alias -g L='| less'
alias -g S='| sort'
alias -g G='| grep'

# docker
alias dk='docker'
alias dkb='docker build'
alias dkr='docker run'
alias dkpid="d inspect --format '{{ .State.Pid }}' "
alias dkip="d inspect --format '{{ .NetworkSettings.IPAddress }}' "

# git aliases
# More set in zprezto
alias gamend='git commit --amend --no-edit'
alias gg='git grep -in'
alias gs='git st'
alias ga='git add'
alias gb='git branch'
alias gd='git diff'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# SSH aliases
# setup worktunnel in .ssh/config
alias sshwt='ssh -A -t worktunnel ssh -A -t'
# setup hometunnel is .ssh/config
alias sshht='ssh -A -t hometunnel ssh -A -t'

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Key binds
# Use Ctrl+r even if I'm using vi key bindings
bindkey '^R' history-incremental-search-backward
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line

#------------FUNCTIONS----------------

# apt-history
function apt-history(){
      case "$1" in
        install)
              cat /var/log/dpkg.log | grep 'install '
              ;;
        upgrade|remove)
              cat /var/log/dpkg.log | grep $1
              ;;
        rollback)
              cat /var/log/dpkg.log | grep upgrade | \
                  grep "$2" -A10000000 | \
                  grep "$3" -B10000000 | \
                  awk '{print $4"="$5}'
              ;;
        *)
              cat /var/log/dpkg.log
              ;;
      esac
}

# attach to a tmux session or start a new session if one doesn't exist
function muxt() { tmux attach || tmux }
# bind above function to Ctrl+t
# ^q = pushline, \n = execute by entering a new line
bindkey -s '\C-t' '^qmuxt\n'

# Create a new directory and enter it
function md() {
  mkdir -p "$@" && cd "$@"
}

# Search history with h $arg or just type h for full history
h() { if [ -z "$*" ]; then history 1; else history 1 | egrep "$@"; fi; }

function extract-rpm() { rpm2cpio "$1" | cpio -idmv; }

function show-cert() { sudo openssl x509 -text -in "$1"; }

# remove host key for ssh
function rm-sshkey() {
  MATCH=$(sed -n "/$1/p" $HOME/.ssh/known_hosts)
  if [[ ! -z $MATCH ]]; then
    echo -e "\e[1;32m Matched Lines \e[0m"
    echo $MATCH
  else
    echo "No key found"
    return
  fi
  local CONFIRM=N
  echo "Delete? (y/N): " 
  read CONFIRM
  if [[ $CONFIRM == 'y' ]]; then
    sed -i "/$1/d" $HOME/.ssh/known_hosts
  else
    printf "replace aborted"
  fi
}

# SSH to a host when it becomes available
function sshup() { while $(ping -c 1 ${1} | grep -qi unreachable); do printf %s "."; sleep 1; done && ssh "$1"; }

# Set precmd for tmux
case "$TERM" in
    screen*)
        precmd () {
            print -Pn '\033k$(hostname)\033\\'
        }
    ;;
esac

# bitch
bitch() {
  if [[ "${BUFFER}" == *" bitch" ]] && [[ "${BUFFER}" != su(do|)\ * ]]; then
    BUFFER="sudo ${BUFFER% bitch}"
  elif [[ "${BUFFER}" == "bitch" ]]; then
    LAST_CMD=$(fc -l -1)
    BUFFER="sudo ${LAST_CMD#*  }"
  fi
  zle .accept-line
}
zle -N accept-line bitch

# Backup funciton
bu() { cp "$1" "$1".backup-`date +%y%m%d`; }

if [[ -d "${ZDOTDIR}"/zsh.d ]]; then
    for ZSH_FILE in $(ls -A "${ZDOTDIR}"/zsh.d/*.zsh); do
        source "${ZSH_FILE}"
    done
fi

if [[ -f "/usr/local/bin/virtualenvwrapper.sh" ]]; then
  source "/usr/local/bin/virtualenvwrapper.sh"
fi

restart-pulp() {
  for service in httpd mongod pulp_celerybeat pulp_workers pulp_resource_manager qpidd; do
    sudo service $service restart
  done
}

# Curl to bash
c2b() {
  curl -L -k ${1} | sudo bash
}
export PATH="$HOME/.dotfiles/bin/packer:$HOME/.dotfiles/bin:$GOPATH/bin:$EC2_HOME/bin:$PATH"
command -v rbenv >/dev/null 2>&1 && eval "$(rbenv init -)"
